A user should be able to view a home page with a list of movies with their image and title.
• A user should be able to filter movies by genre. This filter should default to “All” and take immediate effect
when a selection is made. No additional clicks should be necessary when filtering.
• A user should be able to search for a movie by title.
• A user should be able to click into a movie to view additional detail.
• The genre filter and search should work together. The genre filter should not reset the search and the search
should not reset the genre filter. When both are used, only results that fit both criteria should be shown, not
either one or the other.
• A user should be able to reset the search by clearing the text value in the search input.
• If any of the filters do not return any movies, the UI should indicate that no results were found.
• If the image for a specific movie is not found, the application should display the included “defaultImage”


Components
  -DisplayMovies
    -if no image is found, then use default image
    -filter by genre (all selected upon loading)
      -filters state that saves box checked, and text entered
    -searchbar
      -onclick, update state and dipslay movies containing that search param
  -OneMovie
    -display more details of the movie clicked
Services/Utils
  -API movie list
  -API more details based on movie ID selected.


  APP Structure
  APP.js contain routes
    -Display Movies first page to loading
      -contains search bar and genre filter
    


API Endpoints:
• https://code-challenge.spectrumtoolbox.com/api/movies
• https://code-challenge.spectrumtoolbox.com/api/movies/[id]
API Key Header: Authorization: “Api-Key q3MNxtfep8Gt”
Example Fetch:
fetch(“https://code-challenge.spectrumtoolbox.com/api/movies”, { headers: {
Authorization: “Api-Key q3MNxtfep8Gt”, },
});

graysmith00, eugeneheo, jacobogart, anirudhlm - share github repo